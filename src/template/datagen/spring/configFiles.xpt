«REM»
C) Copyright 2011 CSI-PIEMONTE;                                             
                                                                            
Concesso in licenza a norma dell'EUPL, esclusivamente versione 1.1;         
Non e' possibile utilizzare l'opera salvo nel rispetto della Licenza.       
E' possibile ottenere una copia della Licenza al seguente indirizzo:        
                                                                            
http://www.eupl.it/opensource/eupl-1-1                                      
                                                                            
Salvo diversamente indicato dalla legge applicabile o concordato per        
iscritto, il software distribuito secondo i termini della Licenza e'        
distribuito "TAL QUALE", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO,         
esplicite o implicite.                                                      
Si veda la Licenza per la lingua specifica che disciplina le autorizzazioni 
e le limitazioni secondo i termini della Licenza.                           
«ENDREM»

«IMPORT ecore»
«IMPORT datagen»
«IMPORT rdbmdl»
«IMPORT rdbmdl::constraints»
«IMPORT rdbmdl::datatypes»
«IMPORT rdbmdl::view»

«EXTENSION template::DatagenExtensions»

«DEFINE configFiles FOR DBAccessModel»
«ENDDEFINE»


«DEFINE daoBeansFile(String fileName) FOR DBAccessModel»
«FILE fileName»<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
<!-- Generated By datagen-«getPluginVersion()» -->
«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("dao-beans-global-datasourcedefs")»
	<!-- 
		Esempio di configurazione di datasource, transaction manager, incrementer e dao 
	-->
	«EXPAND localDatasourceSample FOR this»
  
  <bean id="myDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="siceeweb/jdbc/SiceeDS" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>
  
  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
  
  <!--
		transaction manager bea <bean id="txManager"
		class="org.springframework.transaction.jta.WebLogicJtaTransactionManager"
		/>
	-->
	<!-- jboss -->
		
	<bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
  	</bean>

«ENDPROTECT»
	
		<bean id="namedJdbcTemplate" class="«getDALayerBasePkg(this)».util.NamedParameterJdbcTemplateWithQueryDebug">
			<constructor-arg ref="myDataSource" />
		</bean>
	
	«REM»STDMDD-898:aggiunta dichiarazione dei bean di cache se richiesto da modello e referenza del daoImpl alla cache dichiarata«ENDREM»
	
	«FOREACH daopkgs AS currPkg-»
	«FOREACH currPkg.dao AS currDao-»
	«IF currDao.cacheability==CacheabilityTypes::ALMOST_STABLE_DATA-»
  		<bean id="simpleCache_«currDao.getDaoClassName()»" class="«getDALayerBasePkg(this)».util.SimpleCache">
  			«IF currDao.cacheTTLminutes == 0-»
  			<constructor-arg value="1440"></constructor-arg>
  			«ELSE-»
			<constructor-arg value="«currDao.cacheTTLminutes»"></constructor-arg>
			«ENDIF-»
			<constructor-arg value="false"></constructor-arg>
		</bean>
  	«ENDIF-»
  	
«ENDFOREACH-»
«ENDFOREACH-»  

		
	
«FOREACH daopkgs AS currPkg-»
«FOREACH currPkg.dao AS currDao-»
	«IF currDao.pkGenerator!=null-»
  	«EXPAND pkGeneratorBeanDef(currDao) FOR currDao.pkGenerator-»
  	«ENDIF-»
  	
	<bean id="«getDaoIdName(currDao)»" class="«getDaoImplFQN(currDao, this)»">
    	<property name="jdbcTemplate" ref="namedJdbcTemplate" />
    	«IF currDao.cacheability==CacheabilityTypes::ALMOST_STABLE_DATA-»
    	<property name="cache" ref="simpleCache_«currDao.getDaoClassName()»" />
    	«ENDIF»
    	«IF currDao.pkGenerator!=null-»
    	<property name="incrementer" ref="«getDaoIdName(currDao)»Incrementer" />
    	«ENDIF-»
    	«IF currDao.lookupResolvers!=null && currDao.lookupResolvers.resolvers.size > 0 -»
    	«LET getAllDistinctSuppliers(currDao) AS allDistinctSuppliers-»
    		«EXPAND supplierDaoSpringProperty FOREACH allDistinctSuppliers-»
    	«ENDLET-»
    	«ENDIF-»
  	</bean>
  	
«ENDFOREACH-»
«ENDFOREACH-»  
    	
  
</beans>

«ENDFILE»
«ENDDEFINE»

«DEFINE localDatasourceSample FOR DBAccessModel-»
«ERROR "localDatasourceSample: aop non risolta"»
«ENDDEFINE»

«DEFINE pkGeneratorBeanDef(DataAccessObject dao) FOR PKGenerator»
«ERROR "PKGenerator "+this.metaType+ " non supportato"»
«ENDDEFINE»



«DEFINE pkGeneratorBeanDef(DataAccessObject dao) FOR SequencePKGenerator»
«ERROR "pkGeneratorBeanDef: aop non risolta"»
«ENDDEFINE»

«DEFINE supplierDaoSpringProperty FOR DataAccessObject»
		<!-- property del daoSupplier : «getDaoClassName(this)» -->
    	<property name="«getDaoClassName(this).toFirstLower()»" ref="«getDaoClassName(this).toFirstLower()»"></property>
«ENDDEFINE»