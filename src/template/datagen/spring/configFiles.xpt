«IMPORT ecore»
«IMPORT datagen»
«IMPORT rdbmdl»
«IMPORT rdbmdl::constraints»
«IMPORT rdbmdl::datatypes»
«IMPORT rdbmdl::view»

«EXTENSION template::DatagenExtensions»

«DEFINE configFiles FOR DBAccessModel»
«ENDDEFINE»


«DEFINE daoBeansFile(String fileName) FOR DBAccessModel»
«FILE fileName»<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
<!-- Generated By datagen-1.0.0.005 -->
«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID("dao-beans-global-datasourcedefs")»
	<!-- 
		Esempio di configurazione di datasource, transaction manager, incrementer e dao 
	-->
  <!--<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
      <property name="url" value="jdbc:oracle:thin:@TST-DB-01.CSI.IT:1522:TEST10B" /> 
    <property name="url" value="jdbc:oracle:thin:@SVIL10A.CSI.IT:1555:SVIL10A" />  
    <property name="username" value="sicee" />
    <property name="password" value="mypass" />
  </bean>-->
  
  <bean id="myDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="siceeweb/jdbc/SiceeDS" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>
  
  <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
  
  <!--
		transaction manager bea <bean id="txManager"
		class="org.springframework.transaction.jta.WebLogicJtaTransactionManager"
		/>
	-->
	<!-- jboss -->
		
	<bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager">
  	</bean>

«ENDPROTECT»

	<bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="myDataSource" />
	</bean>
	
«FOREACH daopkgs AS currPkg-»
«FOREACH currPkg.dao AS currDao-»
	«IF currDao.pkGenerator!=null-»
  	«EXPAND pkGeneratorBeanDef(currDao) FOR currDao.pkGenerator-»
  	«ENDIF-»
  	
	<bean id="«getDaoIdName(currDao)»" class="«getDaoImplFQN(currDao, this)»">
    	<property name="jdbcTemplate" ref="namedJdbcTemplate" />
    	«IF currDao.pkGenerator!=null-»
    	<property name="incrementer" ref="«getDaoIdName(currDao)»Incrementer" />
    	«ENDIF-»
  	</bean>
  	
«ENDFOREACH-»
«ENDFOREACH-»  
    	
  
</beans>

«ENDFILE»
«ENDDEFINE»

«DEFINE pkGeneratorBeanDef(DataAccessObject dao) FOR PKGenerator»
«ERROR "PKGenerator "+this.metaType+ " non supportato"»
«ENDDEFINE»

«DEFINE pkGeneratorBeanDef(DataAccessObject dao) FOR SequencePKGenerator»
«IF dao.mainTable.primaryKey.includedColumns.size==1-»
	<bean id="«getDaoIdName(dao)»Incrementer"
		class="org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer">
		<constructor-arg>
			<ref bean="myDataSource" />
		</constructor-arg>
		<constructor-arg>
			<value>«this.sequenceName»</value>
		</constructor-arg>
	</bean>

«ELSE-»
	«ERROR "impossibile definire un incrementer per la PK di "+dao.name+" perchè non ha una sola colonna"-»
«ENDIF-»


«ENDDEFINE»

